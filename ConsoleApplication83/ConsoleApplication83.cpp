//----------------------------------------------------
// ÈÒÀ ÞÔÓ, ÈÊÒÈÁ, ÌÎÏ ÝÂÌ
// Ïðîãðàììèðîâàíèå è îñíîâû òåîðèè àëãîðèòìîâ
// Èíäèâèäóàëüíîå çàäàíèå
// 11.01.2022
//----------------------------------------------------
#include "readfiles.h"
#include <iostream>
#define FILE_INPUT "input.txt"
#define FILE_REPORT "answer.txt"

int main() 
{
	setlocale(LC_ALL, "ru");

	//----------------------------------------------------
	// âûäåëåíèå ïàìÿòè äëÿ âõîäíûõ äàííûõ è îò÷¸òà
	//----------------------------------------------------
	sReader::Result r;
	sReader::Report report;

	//----------------------------------------------------
	// Ïðîâåðêà íà íåïîëàäêè ñ ôàéëîì
	//----------------------------------------------------
	if (!sReader::Init(r))
	{
		return -1;
	}

	FILE* f;

	//----------------------------------------------------
	// Åñëè íå óäàëîñü îòêðûòü ôàéë, âîçâðàò -1
	//----------------------------------------------------
	if (fopen_s(&f, FILE_INPUT, "r") != 0)
	{
		return -1;
	}

	//----------------------------------------------------
	// Ïåðåìåííûå äëÿ ÷òåíèÿ âðåìåííîãî äèàïàçîíà
	//----------------------------------------------------
	long long int by, bm, ey, em;

	//----------------------------------------------------
	// Ñ÷èòûâàíèå äàííûõ èç input.txt
	//----------------------------------------------------
	fscanf_s(f, "%lld %s %lld.%lld-%lld.%lld", &r.query.flat, &r.query.taxes_name, 6, &bm, &by, &em, &ey);

	//----------------------------------------------------
	// Ïåðåâîä äàòû â ìåñÿöû(íà÷àëüíûé è êîíå÷íûé)
	//----------------------------------------------------
	r.query.month_start = (by - 2021) * 12 + (bm - 8);
	r.query.month_end = (ey - 2021) * 12 + (em - 8);

	//----------------------------------------------------
	// Âûäåëåíèå ïàìÿòè äëÿ ñòðóêòóðû
	//----------------------------------------------------
	sReader::Taxes taxe;
	bool success = false;

	//----------------------------------------------------
	// Ïîèñê óñëóãè ïî íàçâàíèþ
	//----------------------------------------------------
	for (long long int i = 0; i < r.taxes_count; i++)
	{
		if (strcmp(r.taxes[i].name, r.query.taxes_name) == 0) 
		{
			taxe = r.taxes[i];
			success = true;
			break;
		}
	}

	//----------------------------------------------------
	// Óñëîâèå, åñëè óñëóãà íå íàøëàñü
	//----------------------------------------------------
	if (!success)
	{
		return -1;
	}

	fclose(f);

	//----------------------------------------------------
	// Èíòåðâàë êîëè÷åñòâà ìåñÿöåâ
	//----------------------------------------------------
	report.mcount = r.query.month_end - r.query.month_start + 1;

	//----------------------------------------------------
	// Ïåðåìåííàÿ äëÿ ïîäñ÷¸òà êîëè÷åñòâà ïîêàçàíèé,
	// Ìàññèâ ïîêàçàíèé äëÿ ÎÄÏÓ
	//----------------------------------------------------
	long long int intvs = report.mcount + 1;
	long long int* p_ghmd = new long long int[intvs];

	//----------------------------------------------------
	// ×òåíèå ÎÄÏÓ çà íóæíûå ìåñÿöû â ïîðÿäêå
	// âîçðàñòàíèÿ äàò
	//----------------------------------------------------
	for (long long int i = 0; i < r.ghmd_count; i++)
	{
		if (r.query.month_start - 1 <= r.ghmd[i].month && r.ghmd[i].month <= r.query.month_end) 
		{
			p_ghmd[r.ghmd[i].month - r.query.month_start + 1] = r.ghmd[i].list[taxe.number];
		}
	}

	//----------------------------------------------------
	// Ïðîâåðêà íà íà÷àëî äèàïàçîíà ñ 9îãî ìåñÿöà
	//----------------------------------------------------
	if (r.query.month_start == 1)
	{
		p_ghmd[0] = p_ghmd[1];
	}

	//----------------------------------------------------
	// Ìàññèâ äëÿ çàïèñåé â îò÷¸òå
	// Ìàññèâ äëÿ ïîòðåáëåíèé óñëóãè ïî ÎÄÏÓ
	// Äâóìåðíûé ìàññèâ äëÿ íîìåðà êâàðòèðû è êàæäîãî ìåñÿöà ïîòðåáëåíèÿ óñëóã ïî ÈÏÓ
	// Ìàññèâ äëÿ ïîêàçàíèé çà êàæäûé ìåñÿö
	//----------------------------------------------------
	report.list = new sReader::Record_Report[report.mcount];
	long long int* g_ghmd = new long long int[report.mcount];
	long long int** g_imd = new long long int*[r.flats_count];
	long long int* t_imd = new long long int[intvs];
	
	for (long long int i = 0; i < r.flats_count; i++) 
	{
		//----------------------------------------------------
		// Ïîëó÷åíèå ïîêàçàíèé ÈÏÓ äëÿ i - îé êâàðòèðû
		//----------------------------------------------------
		for (long long int j = 0; j < r.imd_count; j++)
		{
			if (r.query.month_start - 1 <= r.imd[j].month && r.imd[j].month <= r.query.month_end && r.imd[j].flat == i + 1)
			{
				t_imd[r.imd[j].month - r.query.month_start + 1] = r.imd[j].list[taxe.number];
			}
		}

		//----------------------------------------------------
		// Ïðîâåðêà íà íà÷àëî äèàïàçîíà ñ 9îãî ìåñÿöà
		//----------------------------------------------------
		if (r.query.month_start == 1)
		{
			t_imd[0] = t_imd[1];
		}

		g_imd[i] = new long long int[report.mcount];

		//----------------------------------------------------
		// Ïîëó÷åíèå ïîäðåáëåíèÿ äëÿ i - îé êâàðòèðû çà êàæäûé ìåñÿö
		//----------------------------------------------------
		for (long long int j = 0; j < report.mcount; j++) 
		{
			g_imd[i][j] = t_imd[j + 1] - t_imd[j];
		}
	}
	
	//----------------------------------------------------
	// Ïîòðåáëåíèå ÎÄÏÓ çà êàæäûé ìåñÿö
	// Ïîòðåáëåíèå çàäàííîé êâàðòèðû
	// Ïîäñ÷¸ò ïîòðà÷åííîé ñóììû çà ìåñÿö
	// Ïîäñ÷¸ò îáùåãî ïîòðåáëåíèÿ çàäàííîé êâàðòèðû
	//----------------------------------------------------
	for (long long int i = 0; i < report.mcount; i++) 
	{
		g_ghmd[i] = p_ghmd[i + 1] - p_ghmd[i];
		report.list[i].fsum = g_imd[r.query.flat - 1][i];
		report.list[i].fsum_cost = report.list[i].fsum * taxe.tariff;
		report.fsum += report.list[i].fsum;
	}
	
	for (long long int i = 0; i < report.mcount; i++) 
	{
		//----------------------------------------------------
		// Çàïèñü ìåñÿöà äëÿ ñòðî÷êè îò÷¸òà
		//----------------------------------------------------
		report.list[i].month = r.query.month_start + i;

		//----------------------------------------------------
		// Ïîäñ÷¸ò ñóììàðíîãî ïîòðåáëåíèÿ ïî ÈÏÓ
		//----------------------------------------------------
		long long int msum = 0;
		long long int sum = 0;
		for (long long int j = 0; j < r.flats_count; j++) 
		{
			msum += g_imd[j][i];
			sum += r.flats[j].count;
		}

		if (taxe.code == 0)
		{
			sum = r.gS;
		}


		float coefficient = taxe.code == 0 ? r.flats[r.query.flat - 1].S : r.flats[r.query.flat - 1].count;
		coefficient /= sum;

		//----------------------------------------------------
		// Ïîäñ÷¸ò ÎÄÍ äëÿ çàäàííîé êâàðòèðû
		// Íà÷èñëåíèå ÎÄÍ äëÿ çàäàííîé êâàðòèðû
		// Ïîäñ÷¸ò ñóììàðíîãî ïîòðåáëåíèÿ ÎÄÍ
		//----------------------------------------------------
		report.list[i].odn = ((float)(g_ghmd[i] - msum) * coefficient);
		report.list[i].odn_cost = report.list[i].odn * taxe.tariff;
		report.odn += report.list[i].odn;
	}
	
	//----------------------------------------------------
	// Íà÷èñëåíèå ñóììàðíîãî ïîòðåáëåíèÿ çàäàííîé óñëóãè 
	// äëÿ çàäàííîé êâàðòèðû
	// Íà÷èñëåíèå ñóììàðíîãî ïîòðåáëåíèÿ ÎÄÍ çàäàííîé óñëóãè 
	// äëÿ çàäàííîé êâàðòèðû
	//----------------------------------------------------
	report.fsum_cost = report.fsum * taxe.tariff;
	report.odn_cost = report.odn * taxe.tariff;

	//----------------------------------------------------
	// Ïðîâåðêà íà îòêðûòèå ôàéëà report.txt
	//----------------------------------------------------
	if (fopen_s(&f, FILE_REPORT, "w") != 0)
	{
		return -1;
	}

	//----------------------------------------------------
	// Çàïèñü îáùåé ÷àñòè îò÷¸òà
	//----------------------------------------------------
	fprintf_s(f, "%lld %lld %lld %lld\n%lld\n", report.fsum, report.fsum_cost, report.odn, report.odn_cost, report.mcount);

	//----------------------------------------------------
	// Çàïèñü îò÷¸òà çà êàæäûé ìåñÿö
	//----------------------------------------------------
	for (long long int i = 0; i < report.mcount; i++) 
	{
		report.list[i].month += 7;
		long long int y = report.list[i].month / 12;
		long long int m = (report.list[i].month % 12) + 1;
		fprintf_s(f, "%02d.%lld %lld %lld %lld %lld\n", m, 2021 + y, report.list[i].fsum, report.list[i].fsum_cost, report.list[i].odn, report.list[i].odn_cost);
	}

	fclose(f);

	//----------------------------------------------------
	// Î÷èñòêà ïàìÿòè
	//----------------------------------------------------
	delete[] p_ghmd;
	delete[] g_ghmd;

	for (long long int i = 0; i < r.flats_count; i++) 
	{
		delete[] g_imd[i];
	}

	delete[] g_imd;
	delete[] t_imd;

	return 0;
}
